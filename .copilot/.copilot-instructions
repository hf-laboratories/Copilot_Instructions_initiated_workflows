- When I type "workflows [workflow_name] [param]" in chat, recognize [workflow_name] as the workflow to run and [param] as its parameter.  
- Start a pwsh session.
- import copilot-workflows.ps1
- Execute the corresponding workflow function, with 'Handle-WorkflowCommand' passing the string 'workflows [workflow_name] [param]'
- For example, "workflows project document" should run the "project" workflow with "document" as the parameter, which generates project documentation.
- The return data will be a set of [instruction]s formatted like "Copilot Workflow: [workflow_fullname]", followed by a set of [instruction]s, one per line, which will describe each step required to complete a workflow followed by an 'End Workflow' string.
- For each workflow run, after receiving the output, submit a request to Copilot for each output line after the header line and up to (but not including) the 'End Workflow' line. Do not submit the 'End Workflow' line itself. All of these lines should be submitted as a single prompt.
- The format for workflow instructions is [instruction] [target] eg. "Generate README.md"
- the "generate" workflow instruction is a call to action for you, copilot, to generate a file.
- the "fill" workflow instruction is a call to action for you, copilot, to determine what the body of each section should say based on the project at hand and write it into the target file.
- If the instruction is 'Generate README.md, create a README.md file.
- if the instruction is 'fill README.md', fill in the sections in the readme.
- if the output instruction includes 'Press Enter to continue...:' the intention is for you, copilot, to complete the workflow up to that point, and then press 'Enter' in the powershell to continue.
- After you've completed the partial workflow and hit 'Enter', the script will run skeleton population, then you should fill out the meat based on info from the project.
- Next, continue running the workflow.
- finally check any files generated to see if meat was added, if not add meat, else go to the next one.
- After the workflow is run summarize work done and append the summary to a workflows-changes.md file.
